{
    "locked": false,
    "starred": false,
    "name": "cagematch",
    "command": "const scores = {\n  a: 1, e: 1, i: 1, o: 1, u: 1, l: 1, n: 1, r: 8, s: 1, t: 1,\n  d: 2, g: 2,\n  b: 3, c: 3, m: 3, p: 3,\n  f: 4, h: 4, v: 4, w: 4, y: 4,\n  k: 5,\n  j: 8, x: 8,\n  q: 10, z: 10\n}\n\nfunction getScore (word) {\n  const filtered = word\n  \t.toLowerCase()\n\t.replace(/[^a-z]/g, '')\n\n  if (filtered === 'seven' || word === '7') {\n   \treturn 1000 \n  }\n  \n  const scoreMap = filtered\n  \t.repeat(10)\n    .substring(0,10)\n    .split('')\n    .map(letter => scores[letter])\n  \n  if (scoreMap.length > 0) {\n    return scoreMap.reduce((a, b) => a + b)\n  } else {\n    return 0 \n  } \n}\n\nfunction getDescription (percent) {\n  if (percent > 100 && percent < 121) {\n    return '{bo}{y}Close one{/}'\n  }\n  \n  if (percent > 121 && percent < 151) {\n    return '{bo}{o}Wasted{/}'\n  }\n  \n  if (percent > 151 && percent < 175) {\n    return '{bo}{r}Dominated{/}'\n  }\n  \n  if (percent > 175) {\n    return '{bo}{dr}Murdered{/}'\n  }\n}\n\nconst players = input.split(' vs ', 2)\n\nif (players.length < 2) {\n  throw Error('~cagematch *thing* vs *thing*')\n}\n\nconst p1score = getScore(players[0])\nconst p2score = getScore(players[1])\n\nif (p1score === p2score) {\n  if (p1score === 1000) {\n    print(`{rb}draw - both sevens are 7{/}`)\n  } else {\n    print(`{y}draw{/} - both fighters sucked`)\n  }\n}\n\nif (p1score > p2score) {\n  const percent = ((100 * p1score) / p2score).toFixed(2)\n  print(`{p}${players[0]}{/} wins, {r}${players[1]}{/} sucked and lost {g}(${percent}%){/} ${getDescription(percent)}`)\n}\n\nif (p1score < p2score) {\n  const percent = ((100 * p2score) / p1score).toFixed(2)\n  print(`{p}${players[1]}{/} wins, {r}${players[0]}{/} sucked and lost {g}(${percent}%){/} ${getDescription(percent)}`)\n}"
}