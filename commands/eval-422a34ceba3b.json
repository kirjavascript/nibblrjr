{
    "name": "eval",
    "command": "const REPLS = 'bash gcc g++ ruby lua vim haskell guile racket smalltalk elixir rust perl python php lolcode vlang';\nconst JS_REPLS = 'mozjs node deno quickjs jsx babel';\n\nif (!module.required) {\n    throw `usage: ${IRC.colors.cmd('[lang]', 'code')} valid repls are: ${REPLS} ${JS_REPLS}`;\n}\n\nmodule.exports = (lang, script) => {\n    try { \n        // kirjavascript/eval needs to be running on the same server\n        // it only accepts local requests\n        response(fetchSync(`http://localhost:8010/${lang}`, {\n            method: 'POST',\n            body: script.replace(/␤/g, '\\n'),\n        }));\n    } catch(e) {\n        throw 'down for maintenance';\n    }\n};\n\nmodule.exports.REPLS = REPLS;\nmodule.exports.JS_REPLS = JS_REPLS;\n\nfunction response(res) {\n    let [status, output] = JSON.parse(res);\n    output = output.trim().replace(/ +/g, ' ').replace(/\\r|\\n/g, \"␤\");\n    output = output.slice(0, 390);\n    // output = output.slice(output.length - 390);\n    if (!output) output = '[no output]';\n    const prompt = IRC.colors(`{${status?'c':'r'}}>{/}`);\n    print.raw(`${prompt} ${IRC.colors(parseColors(output))}`);\n    // if (IRC.message.from === 'Kirjava')\n    // log(output)\n}\n\nfunction parseColors(output) {\n    return output\n        .replace(new RegExp('\\u001b\\\\[0m', 'g'), IRC.colors('{/}'))\n        .replace(new RegExp('\\u001b\\\\[31m', 'g'), IRC.colors('{r}'))\n        .replace(new RegExp('\\u001b\\\\[35m', 'g'), IRC.colors('{p}'))\n        .replace(new RegExp('\\u001b\\\\[36m', 'g'), IRC.colors('{dc}'))\n        .replace(new RegExp('\\u001b\\\\[38;5;11m', 'g'), IRC.colors('{y}'))\n        .replace(new RegExp('\\u001b\\\\[38;5;14m', 'g'), IRC.colors('{c}'))\n        // catchall\n        .replace(new RegExp('\\u001b\\\\[(\\\\d+)m', 'g'), d => IRC.colors(IRC.colors.hash(d)))\n}",
    "locked": true,
    "starred": true
}