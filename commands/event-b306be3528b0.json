{
    "event": true,
    "locked": true,
    "starred": true,
    "name": "event",
    "command": "// Auth example;\n//\n// curl -X POST --data-binary '{\"passcode\":\"demo\"}' -H \"Content-Type: application/json\" http://localhost:8888/api/webhook/test\n\n// const tripcode = require('tripcode');\n\n// IRC.listen('webhook.test', event => {\n//     const authed = tripcode(event.body.passcode) === IRC.queryConfig('testCode');\n//     print(authed ? 'pass' : 'fail');\n// });\n\nIRC.listen('tick', () => (\n  (new Date).toISOString().slice(5,19)\n  \t=== '01-01T00:00:00'\n  \t&& print('(*⌒∇⌒*) //// 🎉 {rb}ｈａｐｐｙ ｎｅｗ ｙｅａｒ')\n));\n\nconst faces = [ '(◕ᴗ◕✿)', '(◕◡◕✿)', '(◔◡◔✿)', '(｡◕‿◕｡✿)', '(◡‿◡✿)', '(◠‿◠✿)', '(◕ܫ◕✿)', '(◕▿◕✿)', '(◕ ワ ◕✿)' ];\nIRC.listen('message', ({ message: { from, text } }) => {\n    if (text.includes('❤')) {\n        print(' '.repeat(text.indexOf('❤')) + ' ⟍' +faces[0|Math.random()*faces.length]);\n    }\n});\n\n\nIRC.listen('message', (event) => {\n    if (event.target === '#8bitvape'){\n    \tif (event.message.text.includes('donk')) print('donk'); \n    \telse if (event.message.text.includes('dongers')) print(\"{p}ヽ༼ຈل͜ຈ༽ﾉ {r}raise your dongers {p}ヽ༼ຈل͜ຈ༽ﾉ\") \n    } \n});\n\nIRC.listen('message', (event) => {\n    if (['lambdacomplex', 'nerdypepper'].includes(event.message.from.toLowerCase()) && /\\begg\\b/.test(event.message.text))\n      IRC.require('evilegg');\n});\n\n\nconst daily = () => 25200 === (0|new Date/1000)%86400;\n\nconst hourly = () => 420 === (0|new Date/1000)%3600;\n\nIRC.listen('tick', ({ target }) => {\n    if (target === '#rubik' && daily()) {\n        IRC.require('comps.new');\n    }\n});\n\nIRC.listen('tick', ({ target }) => {\n    if (target === '#8bitvape') {\n      \tif (daily()) IRC.require('7');\n        else if (hourly()) print((s=[...'⁷₇⅐⅞⑦⑺⒎㋆㍟㏦７𝟕𝟟𝟩𝟳𝟽🄈🯷'],s[0|Math.random()*s.length]));\n    }\n});\n\nIRC.listen('tick', ({ target }) => {\n    if (target === '#eggchan' && 0 === (0|new Date/1000)%3600) {\n      \tconst hours = new Date().getHours();\n        print('egg '.repeat(hours%12||12)[hours>=12?'toUpperCase':'slice']());\n    }\n});"
}
