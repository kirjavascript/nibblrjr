{
    "event": false,
    "locked": false,
    "starred": false,
    "name": "event.convertUnits",
    "command": "const transforms = {\n    miles: value => +(value * 1.60934).toFixed(2) + 'km',\n    feet: value => `${+(+value * 0.3048).toFixed(2)}m`,\n    inch: value => `${+(+value * 2.54).toFixed(2)}cm`,\n    yards: value => `${+(value * 0.9144).toFixed(2)}m`,\n    km: value => `${+(+value * 0.621371).toFixed(2)} miles`,\n    cm: value => `${+(+value * 0.393701).toFixed(2)} inches`,\n    m: value => `${+(+value * 3.28084).toFixed(2)} feet`,\n    f: value => `${+((+value-32) * 5 / 9).toFixed(2)}°C`,\n    c: value => `${+((+value * 9 / 5) + 32).toFixed(2)}°F`,\n};\n\nconst rx = new RegExp([\n    /\\b(?<miles>\\d+\\.?\\d*|\\.\\d+) ?mi(les?)?\\b/,\n    /\\b(?<feet>\\d+\\.?\\d*|\\.\\d+) ?(feet|ft|foot)\\b/,\n    /\\b(?<inch>\\d+\\.?\\d*|\\.\\d+) ?(inch(es)?)\\b/,\n    /\\b(?<yards>\\d+\\.?\\d*|\\.\\d+) ?(yards|yd)\\b/,\n    /\\b(?<km>\\d+\\.?\\d*|\\.\\d+) ?(kilomet(re|er)s?|km)\\b/,\n    /\\b(?<cm>\\d+\\.?\\d*|\\.\\d+) ?(centimet(re|er)s?|cm)\\b/,\n    /(^|\\s+)(?<m>\\d+\\.?\\d*|\\.\\d+) ?(met(re|er)s?)\\b/, // |m\n    /(?<f>(^|\\s+|(-|−))\\d+\\.?\\d*|(^|\\s+|(-|−))\\.\\d+) ?(deg(ree(s)?)? ?|° ?)(f|fah?renheit)\\b/i,\n    /(?<c>(^|\\s+|(-|−))\\d+\\.?\\d*|(^|\\s+|(-|−))\\.\\d+) ?(deg(ree(s)?)? ?|° ?)(c|cel(s|c)ius)\\b/i,\n].map(d => d.source).join('|'), 'g');\n\n\nfunction convertUnits(str) {\n    return [...str.matchAll(rx)].map(({ groups }) => {\n        for (const key in groups) {\n            if (groups[key] && transforms[key]) {\n                const result = transforms[key](+groups[key]);\n                return [result, `[${groups[key].trim()} ${key}] ${result}`];\n            }\n        }\n        return false;\n    }).filter((d, i, a) => d && a.findIndex(D => D[0] === d[0]) === i).map(d => d[1]);\n}\n\nconst { wordsToNumbers } = require('words-to-numbers');\n\nIRC.listen('message', (event) => {\n    const { text } = event.message;\n    const units = convertUnits(wordsToNumbers(text));\n    if (units.length) {\n        print(units.join`, `);\n    }\n});"
}