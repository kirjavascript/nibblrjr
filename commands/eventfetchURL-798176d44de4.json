{
    "event": true,
    "locked": true,
    "starred": true,
    "name": "event.fetchURL",
    "command": "const URL = require('url');\nconst bytes = IRC.require('bytes');\nconst { JSDOM } = jsdom();\n\nconst { document } = new JSDOM('');\n\nIRC.listen('message', event => {\n  \tif (!IRC.queryConfig('fetchURL', true)) return;\n\tconst urls = event.message.text.match(/(\\b(https?):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;()]*[-A-Z0-9+&@#\\/%=~_|()])/ig);\n    if (!urls || event.message.text.includes('##')) return;\n  \t//const showAll = IRC.queryConfig('fetchURLAll', false);\n  \t//log(urls)\n  \turls.forEach(url => {\n      \t//const title = fetchSync.dom(url).document.querySelector('title').textContent;\n      \t//print.info(title)\n        //const [, metaTitle] = page.match(/<meta\\s+name=\"title\"\\s+content=\"(.+?)\"/i) || ['', ''];\n        //const [, tagTitle] = page.match(/<title[^>]*>([\\S\\s]+?)<\\/title>/i) || ['', ''];\n        //const baseTitle = metaTitle || tagTitle;\n\t\t//print.info(baseTitle);\n       fetchURL(url);\n    });\n  \n  function fetchURL(url) {\n        const page = fetchSync(url);\n        document.open();\n      \tdocument.write(page);\n      \tdocument.close();\n      \tprint.info(document.title);\n    \n  }\n  // entities\n  // config is not defined reddit only\n  // sync nature\n  // filesize timeout\n\n}, { showError: 1 });"
}