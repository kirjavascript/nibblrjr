{
    "name": "memo",
    "command": "// SQL.run`CREATE TABLE IF NOT EXISTS foo (\n//     idx INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,\n//     time DATETIME DEFAULT ((DATETIME(CURRENT_TIMESTAMP, 'LOCALTIME'))),\n\n// )`;\n// const table = SQL.one`SELECT name FROM sqlite_master WHERE type='table' AND name='memo';`;\nconst dateFns = require('date-fns@1.30.1');if (!IRC.command.params[0] || !input.trim()) {\n    print.error(`usage: ${IRC.colors.cmd('memo', 'message', 'name')} or ${IRC.colors.cmd('memo', 'message', ['name', 'time'])}`);\n}\nelse {\n    const now = new Date();\n    const [name, time] = IRC.command.params;\n    const timestamp = time ? IRC.parseTime(time) : now;\n    const distance = dateFns.distanceInWordsStrict(timestamp, now);\n    if (dateFns.isBefore(timestamp, now)) {\n        throw new Error(`epoch fail - requested time is ${distance} ago`);\n    }\n    IRC.eventFns.addEvent('speak', {\n        callback: 'memo.event',\n        time: timestamp,\n        message: input,\n        target: name.trim(),\n    });\n    print(`Saved message for ${IRC.colors.nick(name, false)}` + (timestamp.getTime() == now.getTime() ? '' : ` in {o}${distance}{/} on {dc}${dateFns.format(timestamp, 'dddd MMMM Do YYYY HH:mm:ss')}{/}`))\n}",
    "locked": true,
    "starred": true
}