{
    "name": "memo.event",
    "command": "// legacy ~memo: \n\nconst dateFns = require('date-fns@1.30.1');if (!IRC.command.params[0] || !input.trim()) {\n    print.error(`usage: ${IRC.colors.cmd('memo', 'message', 'name')} or ${IRC.colors.cmd('memo', 'message', ['name', 'time'])}`);\n}\nelse {\n    const now = new Date();\n    const [name, time] = IRC.command.params;\n    const timestamp = time ? IRC.parseTime(time) : now;\n    const distance = dateFns.distanceInWordsStrict(timestamp, now);\n    if (dateFns.isBefore(timestamp, now)) {\n        throw new Error(`epoch fail - requested time is ${distance} ago`);\n    }\n    IRC.eventFns.addEvent('speak', {\n        callback: 'memo.event',\n        time: timestamp,\n        message: input,\n        target: name.trim(),\n    });\n    print(`Saved message for ${IRC.colors.nick(name, false)}` + (timestamp.getTime() == now.getTime() ? '' : ` in {o}${distance}{/} on {dc}${dateFns.format(timestamp, 'dddd MMMM Do YYYY HH:mm:ss')}{/}`))\n}\n\n// event handler for memo\n\nconst dateFns = require('date-fns@1.30.1');if (!IRC.event) {\n    throw new Error('you cannot call this command manually')\n}\n\nconst { type, message, user, target, init, timestamp } = IRC.event;\nconst isSelf = user.toLowerCase() == target.toLowerCase();\nlet out = `${target}: `;\nif (!isSelf) {\n    out += `${IRC.colors.nick(user, true)} `;\n}\nout += message + ` {/}({dc}${dateFns.distanceInWordsStrict(init, new Date())} ago{/})`;\nprint(out);",
    "locked": false,
    "starred": false
}