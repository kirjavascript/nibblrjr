{
    "name": "pipe",
    "command": "\n(function() {\n    const cmds = input.split('|').map(d => d.trim().replaceAll(\"@pipe@\", \"|\"));\n    global.input = IRC.parseCommand({ text: cmds[0] }).input;\n    let data = ''\n    const [_print, _log] = [print, print.log];\n    \n    // ~pipe braph Math.sin(x/2) | print {b}\n\n    ['print', 'notice', 'action'].forEach(printer => {\n        global[printer] = (str) => {\n            // _log(str);\n            data += str;\n        };\n\n        global[printer].raw = (str) => {\n            // _log(str);\n            data += str;\n        };\n    });\n\n    cmds.forEach(cmd => {\n        // _log([data, input, cmd]);\n        IRC.command = IRC.parseCommand({ text: cmd });\n        // _log([global.input, IRC.command.path])\n        IRC.require(IRC.command.path);\n        global.input = data;\n        data = ''\n    })\n\n    _print(input);\n\n})()\n",
    "locked": false,
    "starred": false
}