{
    "name": "poker.deck",
    "command": "const _ = require('lodash');const suits = ['heart', 'spade', 'diamond', 'club'];\nconst suitGlyphs = [...'♥♠♦♣'];\nconst values = [...'23456789⒑JQKA'];\n\n\nmodule.exports = this.Deck = this.Deck || class {\n    constructor() {\n        // chain methods\n        this.new = (sevens) => {\n            this.cards = [];\n            suits.forEach((suit, suitIndex) => {\n                values.forEach((value, valueIndex) => {\n                    if (sevens) {\n                        value = '7';\n                    }\n                    this.cards.push({\n                        rank: value == 'A' ? 1 : valueIndex + 2,\n                        type: suit,\n                        render: ['heart','diamond'].includes(suit)\n                            ? `{r,gr} ${value} ${suitGlyphs[suitIndex]} {/}`\n                            : `{bl,gr} ${value} ${suitGlyphs[suitIndex]} {/}`,\n                    }) \n                });\n            });\n            return this.shuffle();\n        };\n        this.shuffle = () => {\n            this.cards = _.shuffle(this.cards);\n            return this.save();\n        };\n        this.save = () => {\n            const data = JSON.stringify(this.cards);\n            store.set('deck', data);\n            return this;\n        };\n        this.load = () => {\n            const data = store.get('deck');\n            if (data) {\n                this.cards = JSON.parse(data);\n            }\n            else {\n                throw new Error('Attempted to load unsaved deck');\n            }\n            return this;\n        };\n        // drawing\n        this.drawMany = (qty = 1) => {\n            if (!this.cards.length) return void 0;\n           const cards = this.cards.splice(0, qty);\n           this.save();\n           return cards;\n        };\n        this.drawOne = () => {\n            if (!this.cards.length) return void 0;\n            const card = this.cards.shift();\n            this.save();\n            return card;\n        };\n        this.debug = () => {\n            print(this.cards.length + ' cards left in deck')\n        };\n    }\n}",
    "locked": false,
    "starred": false
}
