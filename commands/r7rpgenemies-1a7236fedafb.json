{
    "locked": false,
    "starred": false,
    "name": "r7rpg.enemies",
    "command": "const { from } = IRC.message\n\nlet player = store.load(from)\n\nif (! player.status) {\n  throw new Error('Use ~r7rpg.register to play') \n}\n\nconst modifiers = [\n  {\n\tname: \"Elite\",\n    colour: \"{o,bl}\",\n    health_multiplier: 2.2,\n    strength_multiplier: 1.2,\n    defense_multiplier: 1.2,\n    agility_multiplier: 1.2,\n    intelligence_multiplier: 1.2,\n    money_multiplier: 1.2,\n    xp_multiplier: 1.2\n  },\n  {\n\tname: \"Champion\",\n    colour: \"{bl, o}\",\n    health_multiplier: 1.8,\n    strength_multiplier: 1.8,\n    defense_multiplier: 1.3,\n    agility_multiplier: 1.3,\n    intelligence_multiplier: 1.3,\n    money_multiplier: 1.3,\n    xp_multiplier: 1.3\n  },\n  {\n\tname: \"Baby\",\n    colour: \"{w,b}\",\n    health_multiplier: 0.6,\n    strength_multiplier: 0.7,\n    defense_multiplier: 0.7,\n    agility_multiplier: 0.7,\n    intelligence_multiplier: 0.7,\n    money_multiplier: -1,\n    xp_multiplier: 0.7\n  },\n  {\n\tname: \"Gimpy\",\n    colour: \"{bl,w}\",\n    health_multiplier: 2.6,\n    strength_multiplier: 2.8,\n    defense_multiplier: 1,\n    agility_multiplier: 1,\n    intelligence_multiplier: 0.5,\n    money_multiplier: 1.2,\n    xp_multiplier: 1.6\n  },\n  {\n\tname: \"Ultimate\",\n    colour: \"{dr,y}\",\n    health_multiplier: 3.2,\n    strength_multiplier: 2,\n    defense_multiplier: 2,\n    agility_multiplier: 2,\n    intelligence_multiplier: 2,\n    money_multiplier: 1.2,\n    xp_multiplier: 2\n  },\n  {\n\tname: \"Evil\",\n    colour: \"{bl,r}\",\n    health_multiplier: 2.2,\n    strength_multiplier: 1.9,\n    defense_multiplier: 1.9,\n    agility_multiplier: 1.4,\n    intelligence_multiplier: 1.2,\n    money_multiplier: 1.2,\n    xp_multiplier: 1.5\n  },\n  {\n\tname: \"King\",\n    colour: \"{bl,p}\",\n    health_multiplier: 4,\n    strength_multiplier: 4,\n    defense_multiplier: 2,\n    agility_multiplier: 2,\n    intelligence_multiplier: 5,\n    money_multiplier: 2,\n    xp_multiplier: 3\n  },\n  {\n\tname: \"Daddy\",\n    colour: \"{p,c}\",\n    health_multiplier: 2.8,\n    strength_multiplier: 2.8,\n    defense_multiplier: 1.8,\n    agility_multiplier: 2.8,\n    intelligence_multiplier: 2.2,\n    money_multiplier: 0.4,\n    xp_multiplier: 1\n  },\n]\n\nconst lvl1 = [\n  {\n    name: \"Monkey\",\n    base_health: 100,\n    base_strength: 10,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 0,\n    base_xp: 100\n  },\n  {\n    name: \"Monqui\",\n    base_health: 130,\n    base_strength: 100,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 7,\n    base_xp: 100\n  },\n  {\n    name: \"Skeleton\",\n    base_health: 50,\n    base_strength: 100,\n    base_defense: 0,\n    base_agility: 10,\n    base_intelligence: 0,\n    base_money: 10,\n    base_xp: 50\n  },\n  {\n    name: \"Pirate\",\n    base_health: 100,\n    base_strength: 50,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 100,\n    base_xp: 100\n  },\n  {\n    name: \"Shreddy's mom\",\n    base_health: 10,\n    base_strength: 1,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 0,\n    base_xp: 30\n  },\n  {\n    name: \"Tiger\",\n    base_health: 50,\n    base_strength: 30,\n    base_defense: 0,\n    base_agility: 100,\n    base_intelligence: 0,\n    base_money: 0,\n    base_xp: 70\n  },\n]\n\nconst lvl2 = [\n  {\n    name: \"Angry Falcon\",\n    base_health: 100,\n    base_strength: 70,\n    base_defense: 20,\n    base_agility: 100,\n    base_intelligence: 40,\n    base_money: 50,\n    base_xp: 190\n  },\n  {\n    name: \"Fatty\",\n    base_health: 200,\n    base_strength: 30,\n    base_defense: 100,\n    base_agility: 0,\n    base_intelligence: 10,\n    base_money: 50,\n    base_xp: 200\n  },\n  {\n    name: \"Jew\",\n    base_health: 70,\n    base_strength: 200,\n    base_defense: 20,\n    base_agility: 100,\n    base_intelligence: 0,\n    base_money: 700,\n    base_xp: 130\n  },\n  {\n    name: \"Giant Rat\",\n    base_health: 80,\n    base_strength: 50,\n    base_defense: 10,\n    base_agility: 10,\n    base_intelligence: 1,\n    base_money: 50,\n    base_xp: 180\n  },\n  {\n    name: \"Rubber Gimp\",\n    base_health: 100,\n    base_strength: 100,\n    base_defense: 30,\n    base_agility: 10,\n    base_intelligence: 10,\n    base_money: 50,\n    base_xp: 200\n  },\n  {\n    name: \"Mr Onqui\",\n    base_health: 100,\n    base_strength: 0,\n    base_defense: 40,\n    base_agility: 1000,\n    base_intelligence: 1000,\n    base_money: 777,\n    base_xp: 200\n  },\n]\n\nconst lvl3 = [\n  {\n    name: \"Crack Spider\",\n    base_health: 100,\n    base_strength: 200,\n    base_defense: 10,\n    base_agility: 40,\n    base_intelligence: 0,\n    base_money: 100,\n    base_xp: 300\n  },\n  {\n    name: \"Ninja\",\n    base_health: 100,\n    base_strength: 300,\n    base_defense: 100,\n    base_agility: 100,\n    base_intelligence: 100,\n    base_money: 100,\n    base_xp: 800\n  },\n  {\n    name: \"Giant Octopus\",\n    base_health: 350,\n    base_strength: 100,\n    base_defense: 200,\n    base_agility: 20,\n    base_intelligence: 10000,\n    base_money: 1000,\n    base_xp: 1000\n  },\n  {\n    name: \"Birb Monster\",\n    base_health: 320,\n    base_strength: 150,\n    base_defense: 40,\n    base_agility: 100,\n    base_intelligence: 10,\n    base_money: 250,\n    base_xp: 400\n  }\n]\n\nconst lvl4 = [\n  {\n    name: \"Dragon\",\n    base_health: 900,\n    base_strength: 400,\n    base_defense: 150,\n    base_agility: 230,\n    base_intelligence: 600,\n    base_money: 1000,\n    base_xp: 800\n  },\n  {\n    name: \"Mega Octopode\",\n    base_health: 950,\n    base_strength: 600,\n    base_defense: 200,\n    base_agility: 100,\n    base_intelligence: 100000,\n    base_money: 600,\n    base_xp: 1000\n  },\n  {\n    name: \"Behemoth\",\n    base_health: 1300,\n    base_strength: 900,\n    base_defense: 200,\n    base_agility: 210,\n    base_intelligence: 300,\n    base_money: 1000,\n    base_xp: 1000\n  },\n  {\n    name: \"Dark Lord\",\n    base_health: 1600,\n    base_strength: 460,\n    base_defense: 400,\n    base_agility: 10000,\n    base_intelligence: 900,\n    base_money: 600,\n    base_xp: 800\n  },\n  {\n    name: \"Gingerbread Man\",\n    base_health: 1300,\n    base_strength: 520,\n    base_defense: 4000,\n    base_agility: 10000,\n    base_intelligence: 900,\n    base_money: 600,\n    base_xp: 800\n  }\n]\n\nconst quest = [\n  {\n    name: \"Headless Suit Of Armour\",\n    base_health: 40,\n    base_strength: 10,\n    base_defense: 9999,\n    base_agility: 40,\n    base_intelligence: 9999,\n    base_money: 100,\n    base_xp: 0\n  },\n]\n\nlet save = () => {\n  store.save(from, player)\n}\n\nlet newEnemy = (name = null, level = null, multiplier = 1, verbose = true, modifiable = true) => {\n  let base, pool\n  if (name) {\n    if (lvl1.find(element => element.name == name)) {\n      base = lvl1.find(element => element.name == name)\n    } else if (lvl2.find(element => element.name == name)) {\n      base = lvl2.find(element => element.name == name)\n    } else if (lvl3.find(element => element.name == name)) {\n      base = lvl3.find(element => element.name == name)\n    } else if (quest.find(element => element.name == name)) {\n      base = quest.find(element => element.name == name)\n    } else {\n      base = {\n        name: `${name}`,\n        base_health: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_strength: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_defense: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_agility: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_intelligence: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_money: (Math.floor(Math.random() * 100) + 1) * multiplier,\n    \tbase_xp: (Math.floor(Math.random() * 100) + 1) * multiplier\n      }\n    }\n    if (!level) {\n      level = player.stats.level + Math.floor(Math.random() * 3)\n    }\n  } else {\n    let chance = Math.floor(Math.random() * 100)\n    if (!level) {\n      level = player.stats.level + Math.floor(Math.random() * 3)\n    }\n    if (player.stats.level < 5) {\n      if (chance < 15) {\n        pool = lvl2\n      } else {\n        pool = lvl1\n      }\n      level = player.stats.level\n    } else if (player.stats.level < 10) {\n      if (chance < 60) {\n        pool = lvl1\n      } else if (chance < 85) {\n        pool = lvl2\n      } else {\n        pool = lvl3\n      }\n    } else if (player.stats.level < 15) {\n      if (chance < 25) {\n        pool = lvl1\n      } else if (chance < 65) {\n        pool = lvl2\n      } else {\n        pool = lvl3\n      }\n    } else {\n      if (chance < 5) {\n        pool = lvl1\n      } else if (chance < 25) {\n        pool = lvl2\n      } else if (chance < 40) {\n        pool = lvl3\n      } else {\n        pool = lvl4\n      }\n    }\n    base = pool[Math.floor(Math.random() * pool.length)]\n  }\n  \n  let modifier = null\n  let colour = '{g}'\n  let preName = ''\n  let health_multiplier = multiplier\n  let strength_multiplier = multiplier\n  let defense_multiplier = multiplier\n  let agility_multiplier = multiplier\n  let intelligence_multiplier = multiplier\n  let money_multiplier = multiplier\n  let xp_multiplier = multiplier\n  let modifierChance = 30\n  \n  if (multiplier === 1 && modifiable) {\n    if (player.items.includes(\"Gold Badge\")) {\n      if (player.items.filter(x => x === \"Gold Badge\").length > 1) {\n        modifierChance = 100\n      } else {\n        modifierChance = 80\n      }\n    }\n    if (Math.floor(Math.random() * 100) < modifierChance) {\n      modifier = modifiers[Math.floor(Math.random() * modifiers.length)]\n      preName = modifier.name + ' '\n      colour = modifier.colour\n      health_multiplier = modifier.health_multiplier\n      strength_multiplier = modifier.strength_multiplier\n      defense_multiplier = modifier.defense_multiplier\n      agility_multiplier = modifier.agility_multiplier\n      intelligence_multiplier = modifier.intelligence_multiplier\n      money_multiplier = modifier.money_multiplier\n      xp_multiplier = modifier.xp_multiplier\n    }\n  }\n  \n  const health = Math.floor(base.base_health + (level * 10) * health_multiplier)\n  const strength = Math.floor(base.base_strength + (level * 10) * strength_multiplier)\n  const defense = Math.floor(base.base_defense + (level * 10) * defense_multiplier)\n  const agility = Math.floor(base.base_agility + (level * 10) * agility_multiplier)\n  const intelligence = Math.floor(base.base_intelligence + (level * 10) * intelligence_multiplier)\n  let money = Math.floor((base.base_money + Math.floor(Math.random() * 50)) * money_multiplier)\n  const xp = Math.floor((base.base_xp * Math.sqrt(level)) * xp_multiplier)\n  \n  if (money < 0) {\n    money = 0\n  }\n  \n  const enemy = {\n    name: preName + base.name,\n    level: level,\n    health: health,\n    xp: xp,\n    strength: strength,\n    defense: defense,\n    agility: agility,\n    intelligence: intelligence,\n    money: money,\n    modifier: modifier\n  }\n  \n  IRC.require('r7rpg.player').saveEnemy(enemy)\n  \n  if (verbose) {\n    print(`{dc}${from}{/}: Enemy ${colour}${enemy.name}{/} has appeared ({p}lvl: ${enemy.level}{/} | {r}hp: ${enemy.health}{/})`)\n  }\n}\n\nconst getInfo = () => {\n  if (player.enemy.name) {\n    print(`{dc}${from}{/} is battling a {r}${player.enemy.name}{/} ({w}lvl ${player.enemy.level}{/} | {r}${player.enemy.health}hp{/} | {b}${player.enemy.strength} strength{/} | {g}${player.enemy.defense} defense{/} | {o}${player.enemy.agility} agility{/} | {p}${player.enemy.intelligence} intelligence{/} | {y}$${player.enemy.money}{/})`)\n  } else {\n    throw new Error(`{dc}${from}{/} is not battling an enemy`)\n  }\n}\n\nconst clonePlayer = (name) => {\n  clone = store.load(name)\n  if (!clone.status || !clone.status.type) {\n    throw new Error(`{dc}${from}{/}: Couldn't find ${name}`)\n  }\n  if (clone.status.type === 'combat') {\n    throw new Error(`{dc}${from}{/}: ${name} is in combat`)\n  }\n  let xp\n  if (player.stats.level <= clone.stats.level) {\n    xp = clone.stats.level * 60\n  } else {\n    xp = clone.stats.level * 30\n  }\n  player.enemy = {\n    name: name,\n    level: clone.stats.level,\n    health: clone.stats.max_health,\n    xp: xp,\n    strength: clone.stats.strength,\n    defense: clone.stats.defense,\n    agility: clone.stats.agility,\n    intelligence: clone.stats.intelligence,\n    money: 0\n  }\n  player.status.type = 'combat'\n  \n  print(`{dc}${from}{/}: Player {g}${player.enemy.name}{/} has appeared ({p}lvl: ${player.enemy.level}{/} | {r}hp: ${player.enemy.health}{/})`)\n  \n  store.save(from, player)\n}\n\nmodule.exports = {\n  newEnemy,\n  getInfo,\n  clonePlayer\n}"
}