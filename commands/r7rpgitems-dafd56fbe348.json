{
    "locked": false,
    "starred": false,
    "name": "r7rpg.items",
    "command": "const { from } = IRC.message\nconst { getPlayer, savePlayer } = IRC.require('r7rpg.game')\nplayer = getPlayer()\n\nlet addHours = require('date-fns/addHours')\n\nif (! Array.isArray(player.items)) {\n  player.items = []\n  savePlayer(player)\n  print(`Updated ${from}`)\n}\n\nconst special = [\"Hyper Dice\", \"Blue Dice\", \"Ginger Dice\", \"Dark Forest Medal\", \"3090\", \"Queen Christina's Sanctuary Medal\"]\n\nconst common = [\n  \"Beans\", \"Cyanide\", \"Viagra\", \"Potion\", \"Tuna Fish\", \"Lettuce\", \"Steroids\", \"Gatorade\"\n]\n\nconst rare = [\n  \"Super Beans\", \"Goat's penis\", \"Super Strength Potion\", \"Super Potion\", \"Bean Potion\", \"Paycheck\", \"Shotgun\",\n  \"Banks' Handwash\", \"Monqui's Razor\", \"Monqui's Lunch Box\", \"Auto Defibrillator\", \"Video Game\"\n]\n\nconst legendary = [\n  \"Ultra Beans\", \"Magic Mushroom\", \"Hamulet of Pineapple\", \"Windows XP\", \"Monqui's Beard\", \"Rusty Spanner\",\n  \"Running Shoes\", \"Red Dice\", \"Lucky Dog's Dick\", \"Death Wish\", \"Modafinil\", \"Toxic Dice\",\n  \"Invisible Dice\", \"Gold Badge\"\n]\n\nconst dungeon = [\"Photocopier\", \"Duplicator\", \"Goose Beak\", \"Crystal Candy\", \"Burger Meal\", \"Sex Arse\"]\n\nconst quest = [\"Beans\", \"Goose Beak\", \"Cursed Dice\"]\n\nconst returnItem = () => {\n  let chance = Math.floor(Math.random() * 100)\n  let pool = common\n  price = 50 + Math.floor(Math.random() * 950)\n  const d = new Date();\n  const time = d.toISOString();\n  const roll = IRC.require('r7rpg.game').roll7()\n  const expires = addHours(d, Math.floor(roll.total/2)).toISOString();\n  poolName = \"{b}Common{/}\"\n  if (chance > 85) {\n    pool = rare\n    poolName = \"{p}Rare{/}\"\n    price = 500 + Math.floor(Math.random() * 2000)\n  }\n  if (chance > 95) {\n    pool = legendary\n    poolName = \"{rb}Legendary{/}\"\n    price = 1000 + Math.floor(Math.random() * 3000)\n  }\n  item = pool[Math.floor(Math.random() * pool.length)]\n  while (item === \"Potion\" || item === \"Beans\") {\n    item = pool[Math.floor(Math.random() * pool.length)]\n  }\n  return {\n    name: item,\n    price: price,\n    pool: poolName,\n    time: time,\n    expires: expires\n  }\n}\n\nconst getItem = (item = null, poolName = \"{r}Hacking{/}\", status = null, verbose = true) => {\n  if (! item) {\n    let chance = Math.floor(Math.random() * 100)\n    let pool = common\n    poolName = \"{b}Common{/}\"\n    if (chance > 80) {\n      pool = rare\n      poolName = \"{p}Rare{/}\"\n    }\n    if (chance > 90) {\n      pool = legendary\n      poolName = \"{rb}Legendary{/}\"\n    }\n    item = pool[Math.floor(Math.random() * pool.length)]\n  }\n  \n  if (status) {\n    status += onGet(item)\n  } else {\n  \tstatus = onGet(item)\n  }\n  \n  if (verbose) {\n    print(`{dc}${from}{/} received {y}${item}{/} (${poolName})${status}`)\n  }\n}\n\nconst getItemFromPool = (poolName = 'common', printName = null, verbose = true) => {\n  let pool;\n  switch (poolName) {\n    case \"common\":\n    case \"Common\":\n      if (!printName) {\n      \tprintName = \"{b}Common{/}\"\n      }\n      pool = common\n      break\n    case \"rare\":\n    case \"Rare\":\n      if (!printName) {\n      \tprintName = \"{p}Rare{/}\"\n      }\n      pool = rare\n      break\n    case \"legendary\":\n    case \"Legendary\":\n      if (!printName) {\n      \tprintName = \"{rb}Legendary{/}\"\n      }\n      pool = legendary\n      break\n    case \"special\":\n    case \"Special\":\n      if (!printName) {\n      \tprintName = \"{y}Special{/}\"\n      }\n      pool = special\n      break\n    case \"dungeon\":\n    case \"Dungeon\":\n      if (!printName) {\n      \tprintName = \"{bl,dr} Dungeon {/}\"\n      }\n      pool = dungeon\n      break\n    case \"quest\":\n    case \"Quest\":\n      if (!printName) {\n      \tprintName = \"{bl,b} Quest {/}\"\n      }\n      pool = quest\n      break\n    default:\n      if (!printName) {\n      \tprintName = \"{b}Common{/}\"\n      }\n      pool = common\n      break\n  }\n  \n  item = pool[Math.floor(Math.random() * pool.length)]\n  status = onGet(item)\n  \n  if (verbose) {\n    print(`{dc}${from}{/} received {y}${item}{/} (${printName})${status}`)\n  }\n}\n\nconst onGet = (item) => {\n  switch(item) {\n    case \"Cyanide\":\n      IRC.require('r7rpg.player').saveItem(item)\n    case \"Viagra\":\n      IRC.require('r7rpg.player').saveItem(item)\n    case \"Potion\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ``\n    case \"Beans\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: Gross..`\n    case \"Tuna Fish\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: fishy`\n    case \"Lettuce\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: crunchy`\n    case \"Steroids\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: fighty`\n    case \"Gatorade\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: It's {p}blue{/} flavoured`\n    case \"Bean Potion\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {b}wtf is bean potion..{/}`\n    case \"Super Beans\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: Ew..`\n    case \"Goat's penis\":\n      IRC.require('r7rpg.player').addHealth(30)\n      return `: Tasty.. ({p}+30 max hp{/})`\n    case \"Paycheck\":\n      const cash = Math.floor(Math.random() * 10000)\n      IRC.require('r7rpg.player').credit(cash, true)\n      return `: ({p}+$${cash}{/})`\n    case \"Super Potion\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ''\n    case \"Super Strength Potion\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ''\n    case \"Shotgun\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ''\n    case \"Banks' Handwash\":\n      IRC.require('r7rpg.player').addIntelligence(-30, false)\n      IRC.require('r7rpg.player').addStrength(30, false)\n      return ': {g}Intelligence down, damage up{/}'\n    case \"Video Game\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ': GOTY Edition'\n    case \"Rusty Spanner\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ': {o}Auto heal after kill{/}'\n    case \"Auto Defibrillator\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ': {b}Come back to life{/}'\n    case \"Magic Mushroom\":\n      IRC.require('r7rpg.player').addHealth(10, true, false)\n      IRC.require('r7rpg.player').addStrength(10, false)\n      IRC.require('r7rpg.player').addDefense(10, false)\n      IRC.require('r7rpg.player').addIntelligence(10, false)\n      IRC.require('r7rpg.player').addAgility(10, false)\n      return `: {rb}All stats up{/}`\n    case \"Ultra Beans\":\n      IRC.require('r7rpg.player').saveItem(item)\n      IRC.require('r7rpg.player').addHealth(1, true, false)\n      IRC.require('r7rpg.player').addStrength(1, false)\n      IRC.require('r7rpg.player').addDefense(1, false)\n      IRC.require('r7rpg.player').addIntelligence(1, false)\n      IRC.require('r7rpg.player').addAgility(1, false)\n      return `: Disgusting..`\n    case \"Windows XP\":\n      IRC.require('r7rpg.player').addXp(10000, true)\n      IRC.require('r7rpg.player').addHealth(10, true, false)\n      return `: {w,db} A problem has been detected {/}`\n    case \"Hamulet of Pineapple\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ''\n    case \"Monqui's Beard\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {g}Farts heal{/}`\n    case \"Monqui's Razor\":\n      IRC.require('r7rpg.player').addAgility(30, true)\n      IRC.require('r7rpg.player').removeItem(\"Monqui's Beard\")\n      return `: {b}Looking nice{/}`\n    case \"Monqui's Lunch Box\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {r}it's heavy{/}`\n    case \"Running Shoes\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {y}Trendy{/}`\n    case \"Red Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {g}red`\n    case \"Lucky Dog's Dick\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: it's lucky`\n    case \"Death Wish\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {r}kill urself`\n    case \"3090\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {r}expensive`\n    case \"Modafinil\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {p} intelligence booster`\n    case \"Hyper Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {rb} Magical rainbow dice (not for gay pride)`\n    case \"Toxic Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {p,g} wtf does it say `\n    case \"Cursed Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {bl,r} evil `\n    case \"Invisible Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: `\n    case \"Dark Forest Medal\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {y}Congratulations`\n    case \"Goose Beak\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {p}Double XP!`\n    case \"Queen Christina's Sanctuary Medal\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {y}Congratulations`\n    case \"Blue Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return ``\n    case \"Ginger Dice\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {o}ugly`\n    case \"Photocopier\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {c}Cash Duplicator`\n    case \"Duplicator\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {c}Item Duplicator`\n    case \"Crystal Candy\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {rb}Level Up!`\n    case \"Burger Meal\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {r}Delicious`\n    case \"Sex Arse\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {p}Delicious`\n    case \"Gold Badge\":\n      IRC.require('r7rpg.player').saveItem(item)\n      return `: {y}It's shiny`\n    default:\n      return ``\n  }\n}\n\nconst onBattleWon = () => {\n  \n}\n\nconst onBattleEnd = () => {\n  const modaUses = IRC.require('r7rpg.player').getItemInfo('modafinilUsed')\n  if (modaUses > 0) {\n    for (let i = 0; i < modaUses; i++) {\n      IRC.require('r7rpg.player').addIntelligence(-10000)\n\t  IRC.require('r7rpg.player').setItemInfo('modafinilUsed', null)\n    }\n  }\n}\n\nconst removeItem = (item) => {\n  IRC.require('r7rpg.player').removeItem(item)\n}\n\nconst useItem = (item, verbose = true) => {\n  IRC.require('r7rpg.game').incrementInfo('items_used')\n  if (IRC.require('r7rpg.dungeon').inDungeon()) {\n    IRC.require('r7rpg.dungeon').onItemUsed(item)\n  }\n  if (player.items.includes(input)) {\n    switch(item) {\n      case \"Beans\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').fart()\n        break\n      case \"Potion\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').healPlayer(100)\n        break\n      case \"Bean Potion\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').giveItem('Beans', 'Bean Potion')\n        IRC.require('r7rpg.player').giveItem('Beans', 'Bean Potion')\n        IRC.require('r7rpg.player').giveItem('Beans', 'Bean Potion')\n        IRC.require('r7rpg.player').giveItem('Beans', 'Bean Potion')\n        IRC.require('r7rpg.player').giveItem('Beans', 'Bean Potion')\n        break\n      case \"Cyanide\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').kill()\n        if (player.items.includes(\"Death Wish\")) {\n          IRC.require('r7rpg.player').giveItem()\n          if (IRC.require('r7rpg.player').incrementItemInfo('deathWishUses') > 12) {\n            IRC.require('r7rpg.player').setItemInfo('deathWishUses', 0)\n            IRC.require('r7rpg.player').removeItem('Death Wish')\n            print(`{dc}${from}{/} no longer has a {y}Death Wish{/}`)\n          }\n        }\n        break\n      case \"Viagra\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addDefense(1, false)\n        if (verbose) {\n          print(`{dc}${from}{/} used harden ({p}+1 defense{/})`)\n        }\n        break\n      case \"Tuna Fish\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addIntelligence(1, false)\n        if (verbose) {\n          print(`{dc}${from}{/} ate {y}Tuna Fish{/} ({p}+1 intelligence{/})`)\n        }\n        break\n      case \"Lettuce\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addHealth(1, true, false, false)\n        if (verbose) {\n          print(`{dc}${from}{/} ate {g}Lettuce{/} ({p}+1 health{/})`)\n        }\n        break\n      case \"Steroids\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addStrength(1, false)\n        if (verbose) {\n          print(`{dc}${from}{/} ate {y}Steroids{/} ({p}+1 strength{/})`)\n        }\n        break\n      case \"Gatorade\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addAgility(1, false)\n        if (verbose) {\n          print(`{dc}${from}{/} drank {y}Gatorade{/} ({p}+1 agility{/})`)\n        }\n        break\n      case \"Shotgun\":\n        if (player.enemy) {\n\t\t  IRC.require('r7rpg.player').damageEnemy(1500)\n        } else {\n          IRC.require('r7rpg.player').kill(verbose)\n        }\n        IRC.require('r7rpg.player').removeItem(item)\n        break\n      case \"Video Game\":\n        const roll = IRC.require('r7rpg.game').roll7()\n        if (verbose) {\n          if (player.items.includes('3090')) {\n            print(`{g}RTX On:{/}`)\n            const text = `${from} got ${roll.total}`\n            let reflection = IRC.require('fliptext')(text)\n            reflection = reflection.split(\"\")\n            reflection = reflection.reverse()\n            reflection = reflection.join(\"\");\n            print(`${roll.render} {rb}${text}`);\n            print(`${roll.render} {rb}${reflection}`);\n          } else {\n            print(`${roll.render} {dc}${from}{/} got {o}${roll.total}`);\n          }\n        }\n        break\n      case \"Monqui's Lunch Box\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').giveItem('Beans', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Potion', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Cyanide', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Viagra', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Tuna Fish', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Lettuce', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Steroids', '{p}Monqui\\'s Lunch Box{/}')\n        IRC.require('r7rpg.player').giveItem('Gatorade', '{p}Monqui\\'s Lunch Box{/}')\n        break\n      case \"Super Beans\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').fart()\n        IRC.require('r7rpg.player').fart()\n        IRC.require('r7rpg.player').fart()\n        break\n      case \"Super Strength Potion\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addStrength(10)\n        break\n      case \"Super Potion\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').healPlayer(300, true)\n        break\n      case \"Hamulet of Pineapple\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addIntelligence(20)\n        break\n      case \"Ultra Beans\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').fart()\n        IRC.require('r7rpg.player').fart()\n        IRC.require('r7rpg.player').fart()\n        IRC.require('r7rpg.player').fart()\n        IRC.require('r7rpg.player').fart()\n        break\n      case \"Modafinil\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addIntelligence(10000)\n\t\tIRC.require('r7rpg.player').incrementItemInfo('modafinilUsed')\n        break\n      case \"Red Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Cursed Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Toxic Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Hyper Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Invisible Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Blue Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Ginger Dice\":\n        IRC.require('r7rpg.player').setDice(item)\n        print(`{dc}${from}{/}: Using ${item}`)\n        break\n      case \"Photocopier\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').credit(player.stats.money, true)\n        break\n      case \"Duplicator\":\n        IRC.require('r7rpg.player').removeItem(item)\n        if (player.items.length > 0) {\n          item = player.items[Math.floor(Math.random() * player.items.length)]\n          status = onGet(item)\n          print(`{dc}${from}{/} received {y}${item}{/} ({c}Duplicator{/})${status}`)\n        } else {\n          print(`{dc}${from}{/}: nothing happened`)\n        }\n        break\n      case \"Crystal Candy\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addXp((player.stats.next_level - player.stats.xp) + 1)\n        break\n      case \"Burger Meal\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addHealth(50, true, true)\n        break\n      case \"Sex Arse\":\n        IRC.require('r7rpg.player').removeItem(item)\n        IRC.require('r7rpg.player').addIntelligence(50, true)\n        break\n      default:\n        if (verbose) {\n          print(`{dc}${from}{/}: nothing happened`)\n        }\n        break\n  \t}\n  } else {\n   \tthrow new Error(`{dc}${from}{/} doesn't have ${input}`)\n  }\n}\n\nconst listItems = () => {\n  if (player.items.length > 0) {\n    let counts = {};\n    let items_str = ''\n    let col = '{y}'\n    for (var i = 0; i < player.items.length; i++) {\n        counts[player.items[i]] = 1 + (counts[player.items[i]] || 0);\n    }\n    for (const item in counts) {\n      if (col == '{y}') {\n        col = '{o}'\n      } else {\n        col = '{y}'\n      }\n      if (counts[item] > 1) {\n        items_str += `${col}${item} (x${counts[item]}) {/}`\n      } else {\n        items_str += `${col}${item} {/}`\n      }\n    }\n    print(`{dc}${from}{/}: ${items_str}`) \n  } else {\n    print(`{dc}${from}{/} hasn't got anything`)\n  }\n}\n\nif (input === \"list\"  || !module.required) {\n  listItems()\n}\n\nif (input === \"info\"  || !module.required) {\n  const rustyAmount = IRC.require('r7rpg.player').getItemInfo('rustySpannerUses')\n  if (rustyAmount != 0) {\n    print(`${from} has used {y}Rusty Spanner{/} ${rustyAmount}/100 times`)\n  }\n  \n  const defibAmount = IRC.require('r7rpg.player').getItemInfo('autoDefibrillatorUses')\n  if (defibAmount != 0) {\n    print(`${from} has used {y}Auto Defibrilator{/} ${defibAmount}/100 times`)\n  }\n  \n  const shoesAmount = IRC.require('r7rpg.player').getItemInfo('runningShoesUses')\n  if (shoesAmount != 0) {\n    print(`${from} has used {y}Running Shoes{/} ${shoesAmount}/10 times`)\n  }\n  \n  const dogsDickAmount = IRC.require('r7rpg.player').getItemInfo('luckyDogDickUses')\n  if (dogsDickAmount != 0) {\n    print(`${from} has rubbed his {y}Lucky Dog's Dick{/} ${dogsDickAmount}/20 times`)\n  }\n  \n  const deathWishAmount = IRC.require('r7rpg.player').getItemInfo('deathWishUses')\n  if (deathWishAmount != 0) {\n    print(`${from} has used {y}Death Wish{/} ${deathWishAmount}/12 times`)\n  }\n  \n  const gooseBeakUses = IRC.require('r7rpg.player').getItemInfo('gooseBeakUses')\n  if (gooseBeakUses != 0) {\n    print(`${from} has rubbed his {y}Goose Beak{/} ${gooseBeakUses}/??? times`)\n  }\n}\n\n\nmodule.exports = {\n  getItem,\n  getItemFromPool,\n  useItem,\n  removeItem,\n  listItems,\n  onBattleWon,\n  onBattleEnd,\n  returnItem\n};"
}