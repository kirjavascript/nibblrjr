{
    "event": false,
    "locked": false,
    "starred": false,
    "name": "scrabble.game.stats.full",
    "command": "const _ = require('lodash');function incr() {\n    if (typeof incr.counter == 'undefined') {\n        incr.counter = 0;\n    }\n\n    incr.counter++;\n\n    return incr.counter;\n}\n\nconst {round} = IRC.require(\"scrabble.game\")\n\nconst showAll = input == 'all';\nconst scores = _.sortBy(store.all(), (d) => +d.value)\n.reduce((acc, cur) => {\n    const exists = acc.findIndex((d) => d.value === cur.value);\n    if (exists !== -1) {\n        acc[exists].key += `, ${IRC.breakHighlight(cur.key)}`;\n    } else {\n        cur.key = IRC.breakHighlight(cur.key)\n        acc.push(cur);\n    }\n    return acc;\n}, []).slice(0,Infinity).filter(d => !(d.key.includes('_guesses') || d.key.includes('$')));\n\nconst longest = scores.reduce((acc, cur) => Math.max(acc, cur.key.length), 0) + 2;\n    \nprint(`{u}Leaderboard{/}`);\nconst colours = ['{y}','{gr}','{o}'];\nconst data = IRC.require('module.paste')(scores.reverse());\nprint(`Visit {dc}{u}${data.trim()}{/} for a full list`)\n/*scores.reverse().forEach(({key, value}, i)=> {\n  \tif (i >= 10) return;\n    if (Number.isNaN(+value)) return;\n    const pad = longest - key.length - (String(i+1).length - 1);\n    const j = incr();\n    print(`${j}. ${colours[j-1]||''}${key}{/}{bo}${'.'.repeat(pad>0?pad:0)}{/}{y}${round(+value)}`)\n})\nprint(`scrabble has been played {dc}${IRC.require('module.count').count()}{/} times`)\n\n// https://github.com/thewca/worldcubeassociation.org/blob/master/WcaOnRails/config/routes.rb#L158\nconst obj = fetchSync('https://api.worldcubeassociation.org/search/users?persons_table=true&q=' + encodeURIComponent(input), { type: 'json'});\n\n        if (obj.result.length <= 3) {\n            print(obj.result.map(d => `${d.name} (${d.country_iso2}) {dc}{u}https://wca.link/${d.id}{/}`).join`\\n`)\n        }\n        else {\n            const payload = obj.result.map(d => `${d.name} (${d.country_iso2}) https://wca.link/${d.id}`).join`\\n`;\n            \n            const data = IRC.require('module.paste')(payload);\n            print(`{o}${obj.result.length}{/} results - visit {dc}{u}${data.trim()}{/} for a full list`)\n        }\n*/"
}