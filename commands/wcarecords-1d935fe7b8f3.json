{
    "locked": false,
    "starred": false,
    "name": "wca.records",
    "command": "const capitalize = (s) => {\n    if(s) return s.charAt(0).toUpperCase() + s.slice(1)\n}\nconst obj = fetchSync(`https://api.worldcubeassociation.org/records`, {type: 'json'});\nconst CONTINENTS = Object.keys(obj.continental_records).map((s) => s.replace(\"_\",\"\"))\nconst COUNTRIES = Object.keys(obj.national_records)\nconst event = IRC.command.params[1]\nconst geo = capitalize(IRC.command.params[0])\n\nfunction pad(num){\n    if(num < 10){\n        return \"0\" + num.toFixed(2)\n    }else{\n        return num.toFixed(2)\n    }\n}\n\nfunction format_number(num){\n    if(num > 59.99){\n        return Math.floor(num / 60) + \":\" + pad(num % 60)\n    }else{\n        return num\n    }\n}\n\nfunction print_event(event, segment){\n    data = segment[event]\n    const devider = event == \"333fm\" ? 1 : 100;\n        if (data) {\n            print(`{y}[${event}]{/} Single: {g}${format_number((data.single/devider).toFixed(2))}{/} Average: {g}${format_number((data.average/100).toFixed(2))}`);\n        }\n        else {\n            print('No Record found for ' + event + ' for this country. Valid events:');\n            print(Object.keys(segment).join`, `)\n        }\n}\n\nif(geo && event){\n    if(geo === \"World\"){\n        print_event(event, obj.world_records)\n    }\n    else if(CONTINENTS.indexOf(geo) !== -1 ){\n        print_event(event, obj.continental_records[\"_\"+geo]) \n    }\n    else if(COUNTRIES.indexOf(geo) !== -1){\n        print_event(event, obj.national_records[geo])\n    }\n    else{\n        print(\"Geo not found\")\n        print(\"Acceptable Continents are\")\n        print(CONTINENTS.join`, `)\n        print(\"Acceptable Countries are\")\n        print(COUNTRIES.join`, `)\n    }\n}else{\n    print(`Usage ${IRC.colors.cmd(IRC.command.path, void 0, ['geo', 'event'])}`)\n    print(\"Valid geos are world, a continent or a country\")\n}"
}